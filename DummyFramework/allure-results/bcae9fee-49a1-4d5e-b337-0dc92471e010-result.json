{"name":"afterSuite","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Can't find file: D:\\ALLExecutionReport\\Automation Execution Report.xlsx.","trace":"com.spire.xls.packages.sprpgaa: Can't find file: D:\\ALLExecutionReport\\Automation Execution Report.xlsx.\r\nFile name: 'D:\\ALLExecutionReport\\Automation Execution Report.xlsx'\r\ncom.spire.xls.packages.sprdeaa.<init>(Unknown Source)\r\ncom.spire.xls.packages.sprdeaa.<init>(Unknown Source)\r\ncom.spire.xls.packages.sprdeaa.<init>(Unknown Source)\r\ncom.spire.xls.packages.sprkeaa.spr┄┏﻿—(Unknown Source)\r\ncom.spire.xls.packages.sprfxf.spr┑┑(Unknown Source)\r\ncom.spire.xls.packages.sprfxf.<init>(Unknown Source)\r\ncom.spire.xls.core.spreadsheet.XlsWorkbook.<init>(Unknown Source)\r\ncom.spire.xls.Workbook.loadFromFile(Unknown Source)\r\ncom.spire.xls.Workbook.loadFromFile(Unknown Source)\r\nutil.CopyExcelData.AssertExecutionReport(CopyExcelData.java:47)\r\ntestRunner.TestExecutionSuite.afterSuite(TestExecutionSuite.java:516)\r\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nsun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\nsun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\njava.lang.reflect.Method.invoke(Unknown Source)\r\norg.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\norg.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)\r\norg.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)\r\norg.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)\r\norg.testng.SuiteRunner.privateRun(SuiteRunner.java:336)\r\norg.testng.SuiteRunner.run(SuiteRunner.java:268)\r\norg.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\norg.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\norg.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\norg.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\norg.testng.TestNG.run(TestNG.java:1064)\r\ntestRunner.TestEngine.main(TestEngine.java:58)\r\n\tat com.spire.xls.packages.sprdeaa.<init>(Unknown Source)\r\n\tat com.spire.xls.packages.sprdeaa.<init>(Unknown Source)\r\n\tat com.spire.xls.packages.sprdeaa.<init>(Unknown Source)\r\n\tat com.spire.xls.packages.sprkeaa.spr┄┏﻿—(Unknown Source)\r\n\tat com.spire.xls.packages.sprfxf.spr┑┑(Unknown Source)\r\n\tat com.spire.xls.packages.sprfxf.<init>(Unknown Source)\r\n\tat com.spire.xls.core.spreadsheet.XlsWorkbook.<init>(Unknown Source)\r\n\tat com.spire.xls.Workbook.loadFromFile(Unknown Source)\r\n\tat com.spire.xls.Workbook.loadFromFile(Unknown Source)\r\n\tat util.CopyExcelData.AssertExecutionReport(CopyExcelData.java:47)\r\n\tat testRunner.TestExecutionSuite.afterSuite(TestExecutionSuite.java:516)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)\r\n\tat org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)\r\n\tat org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:336)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat testRunner.TestEngine.main(TestEngine.java:58)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"ScriptReference","value":"ActivePolicyForCounterOfferAfterUWR"},{"name":"ScenarioID","value":"Health_ArogyaSanjeevani-NSTP_TC_026"},{"name":"Description","value":"To verify the counter offer if counter offer decision  select as reject  for  Individual policy from Application Data Capture flow with BMI below details \nProduct Name : Aarogya Sanjeevani\nPolicy Plan : Individual \nEmployee dicount : yes\nBusiness Type : New Business\nMembers : 1A ( Self)\nAge : 57 Years\nSI: 300000\nM1_BMI  should be 37.5_Refer to UWR\n\nLevel 1:Autoloading & refer to UWR_Accept with loading\nLevel 2: COL Review (Accept) \nLevel 3 :Counter offer(reject)\nLevel 4 :Proposal should be rejected\nLevel 5  : Refund should generated in Payment Cycle screen"},{"name":"Product","value":"Arogya_Sanjeevani"},{"name":"TestData_RepositoryFile","value":"TestDataSuite\\0002_HealthTestDataSuite_SBI.xlsx"},{"name":"Module","value":"COL"},{"name":"LOB","value":"Health"}],"start":1692350501835,"stop":1692350501835,"uuid":"bcae9fee-49a1-4d5e-b337-0dc92471e010","historyId":"7b735644f27f34a67113b4da1346133b","fullName":"testRunner.TestExecutionSuite.afterSuite","labels":[{"name":"package","value":"testRunner.TestExecutionSuite"},{"name":"testClass","value":"testRunner.TestExecutionSuite"},{"name":"testMethod","value":"afterSuite"},{"name":"parentSuite","value":"Health"},{"name":"suite","value":"Health_ArogyaSanjeevani-NSTP_TC_026"},{"name":"subSuite","value":"testRunner.TestExecutionSuite"},{"name":"host","value":"DT3E50700"},{"name":"thread","value":"16948@DT3E50700.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}